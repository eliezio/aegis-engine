---
# ============LICENSE_START=======================================================
#  Copyright (C) 2019 The Nordix Foundation. All rights reserved.
# ================================================================================
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0
# ============LICENSE_END=========================================================

- name: Get IP of jumphost
  command: "openstack stack output show {{ stack_name }} jumphost_ip -c output_value -f json"
  register: stack_output_jumphost_ip
  changed_when: false
  until: "'output_value' in stack_output_jumphost_ip.stdout"
  retries: 10
  delay: 3
  environment:
    PATH: "{{ engine_venv }}/bin"

- name: Get IPs of master nodes
  command: "openstack stack output show {{ stack_name }} master_ip -c output_value -f json"
  register: stack_output_master_ip
  changed_when: false
  until: "'output_value' in stack_output_master_ip.stdout"
  retries: 10
  delay: 3
  environment:
    PATH: "{{ engine_venv }}/bin"

- name: Get IPs of worker nodes
  command: "openstack stack output show {{ stack_name }} worker_ip -c output_value -f json"
  register: stack_output_worker_ip
  changed_when: false
  until: "'output_value' in stack_output_worker_ip.stdout"
  retries: 10
  delay: 3
  environment:
    PATH: "{{ engine_venv }}/bin"

- name: Register IPs of master and worker nodes
  set_fact:
    jumphost_ip: "{{ stack_output_jumphost_ip.stdout }}"
    master_ip: "{{ stack_output_master_ip.stdout }}"
    worker_ip: "{{ stack_output_worker_ip.stdout }}"

- name: Delete outdated kubespray inventory
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "{{ inventory_path }}/inventory.ini"
    - "/tmp/inventory.ini"
    - "{{ config_path }}/inventory.ini" # TODO - group_vars: delete this
  ignore_errors: yes

- name: Generate kubespray inventory
  template:
    src: inventory_kubespray.ini.j2
    dest: "{{ item }}"
  with_items:
    - "{{ inventory_path }}/inventory.ini"
    - "/tmp/inventory.ini"
    - "{{ config_path }}/inventory.ini" # TODO - group_vars: delete this

# vim: set ts=2 sw=2 expandtab:
