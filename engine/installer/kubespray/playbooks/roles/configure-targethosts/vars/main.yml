---
# admin network information
admin_mac: "{{ node_interfaces[idf.net_config.admin.interface].mac_address }}"
admin_vlan: "{{ node_interfaces[idf.net_config.admin.interface].vlan }}"
admin_if: >-
  {% for x in (ansible_interfaces | map('regex_replace', '-', '_') | map('regex_replace', '^', 'ansible_') | map('extract', hostvars[inventory_hostname]) |  selectattr('macaddress','defined')) -%}
  {%- if x.macaddress == admin_mac -%}
  {%- if admin_vlan == 'native' -%}
  {{ x.device }}
  {%- else -%}
  {{ x.device }}.{{ admin_vlan }}
  {%- endif -%}
  {%- endif -%}
  {%- endfor -%}
admin_nw: "{{ idf.net_config.admin.network }}/{{ idf.net_config.admin.mask }}"
admin_ip: "{{ node_interfaces[idf.net_config.admin.interface].address }}"
admin_gw: >-
  {%- if idf.net_config.admin.gateway is defined -%}
    {{ idf.net_config.admin.gateway }}
  {%- endif -%}
admin_dns: >-
  {%- if idf.net_config.admin.dns is defined -%}
    {{ idf.net_config.admin.dns }}
  {%- endif -%}

# public network information
public_mac: "{{ node_interfaces[idf.net_config.public.interface].mac_address }}"
public_vlan: "{{ node_interfaces[idf.net_config.public.interface].vlan }}"
public_if: >-
  {% for x in (ansible_interfaces | map('regex_replace', '-', '_') | map('regex_replace', '^', 'ansible_') | map('extract', hostvars[inventory_hostname]) |  selectattr('macaddress','defined')) -%}
  {%- if x.macaddress == public_mac -%}
  {%- if public_vlan == 'native' -%}
  {{ x.device }}
  {%- else -%}
  {{ x.device }}.{{ public_vlan }}
  {%- endif -%}
  {%- endif -%}
  {%- endfor -%}
public_nw: "{{ idf.net_config.public.network }}/{{ idf.net_config.public.mask }}"
public_ip: "{{ node_interfaces[idf.net_config.public.interface].address }}"
public_gw: >-
  {%- if idf.net_config.public.gateway is defined -%}
    {{ idf.net_config.public.gateway }}
  {%- endif -%}
public_dns: >-
  {%- if idf.net_config.public.dns is defined -%}
    {{ idf.net_config.public.dns }}
  {%- endif -%}

# mgmt network information
mgmt_mac: "{{ node_interfaces[idf.net_config.mgmt.interface].mac_address }}"
mgmt_vlan: "{{ node_interfaces[idf.net_config.mgmt.interface].vlan }}"
mgmt_if: >-
  {% for x in (ansible_interfaces | map('regex_replace', '-', '_') | map('regex_replace', '^', 'ansible_') | map('extract', hostvars[inventory_hostname]) |  selectattr('macaddress','defined')) -%}
  {%- if x.macaddress == mgmt_mac -%}
  {%- if mgmt_vlan == 'native' -%}
  {{ x.device }}
  {%- else -%}
  {{ x.device }}.{{ mgmt_vlan }}
  {%- endif -%}
  {%- endif -%}
  {%- endfor -%}
mgmt_nw: "{{ idf.net_config.mgmt.network }}/{{ idf.net_config.mgmt.mask }}"
mgmt_ip: "{{ node_interfaces[idf.net_config.mgmt.interface].address }}"
mgmt_gw: >-
  {%- if idf.net_config.mgmt.gateway is defined -%}
    {{ idf.net_config.mgmt.gateway }}
  {%- endif -%}
mgmt_dns: >-
  {%- if idf.net_config.mgmt.dns is defined -%}
    {{ idf.net_config.mgmt.dns }}
  {%- endif -%}

# neutron network information
neutron_mac: "{{ node_interfaces[idf.net_config.neutron.interface].mac_address }}"
neutron_vlan: "{{ node_interfaces[idf.net_config.neutron.interface].vlan }}"
neutron_if: >-
  {% for x in (ansible_interfaces | map('regex_replace', '-', '_') | map('regex_replace', '^', 'ansible_') | map('extract', hostvars[inventory_hostname]) |  selectattr('macaddress','defined')) -%}
  {%- if x.macaddress == neutron_mac -%}
  {%- if neutron_vlan == 'native' -%}
  {{ x.device }}
  {%- else -%}
  {{ x.device }}.{{ neutron_vlan }}
  {%- endif -%}
  {%- endif -%}
  {%- endfor -%}
neutron_nw: "{{ idf.net_config.neutron.network }}/{{ idf.net_config.neutron.mask }}"
neutron_ip: "{{ node_interfaces[idf.net_config.neutron.interface].address }}"
neutron_gw: >-
  {%- if idf.net_config.neutron.gateway is defined -%}
    {{ idf.net_config.neutron.gateway }}
  {%- endif -%}
neutron_dns: >-
  {%- if idf.net_config.neutron.dns is defined -%}
    {{ idf.net_config.neutron.dns }}
  {%- endif -%}

# vim: set ts=2 sw=2 expandtab:
